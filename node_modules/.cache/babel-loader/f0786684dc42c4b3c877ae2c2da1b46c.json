{"ast":null,"code":"var _jsxFileName = \"/Users/alexandergovea/Downloads/react-complete-guide-code-22-authentication/code/01-starting-project/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const handlePost = async (url, userCredentials) => {\n    setIsLoading(true);\n\n    try {\n      console.log('userCred: ', userCredentials);\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(userCredentials),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log('response: ', response);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const json = await response.json();\n      setIsLoading(false);\n    } catch (error) {\n      let errorMessage = \"Authentication failed!\";\n\n      if (error && error.message) {\n        errorMessage = error.message;\n      }\n\n      setError(errorMessage);\n      setIsLoading(false);\n    }\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    let url;\n    const FIREBASE_KEY = \"AIzaSyBZhsabDexE9BhcJbGxnZ4DiRlrCN9xe24\";\n\n    if (isLogin) {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FIREBASE_KEY}`;\n      handlePost(url);\n    } else {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_KEY}`;\n      handlePost(url, {\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ref: passwordInputRef,\n          id: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"white\"\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"Mx4IT9Zi9R34MH7V6c+LXxE8LO8=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/alexandergovea/Downloads/react-complete-guide-code-22-authentication/code/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","isLogin","setIsLogin","error","setError","isLoading","setIsLoading","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","handlePost","url","userCredentials","console","log","response","fetch","method","body","JSON","stringify","headers","ok","Error","json","errorMessage","message","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","FIREBASE_KEY","email","password","returnSecureToken","auth","control","actions","color","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const handlePost = async (url, userCredentials) => {\n    setIsLoading(true);\n    try {\n      console.log('userCred: ', userCredentials)\n\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(userCredentials),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      console.log('response: ', response)\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const json = await response.json();\n      setIsLoading(false);\n    } catch (error) {\n      let errorMessage = \"Authentication failed!\";\n      if (error && error.message) {\n        errorMessage = error.message;\n      }\n\n      setError(errorMessage);\n      setIsLoading(false);\n    }\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    let url;\n    const FIREBASE_KEY = \"AIzaSyBZhsabDexE9BhcJbGxnZ4DiRlrCN9xe24\";\n\n    if (isLogin) {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FIREBASE_KEY}`;\n\n      handlePost(url);\n    } else {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_KEY}`;\n\n      handlePost(url, {\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      });\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" ref={emailInputRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            ref={passwordInputRef}\n            id=\"password\"\n            required\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p style={{ color: \"white\" }}>Loading...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}